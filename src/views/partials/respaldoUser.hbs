<script>
    //La pantalla de Home (ruta: /) debe contener un enlace al formulario para la creación de un nuevo pedido, además de una tabla que permita a los liceos ver la lista completa de sus pedidos, independiente de en qué estado estén (rectificados o no). Acá los liceos deben poder los siguientes datos por cada pedido:

    // Fecha del pedido
    // Número de menús de cada opción
    // Estado(puede un fondo de color verde claro para los pedidos no rectificados, y color naranjo para los pedidos ya rectificados)
    // En el caso de los pedidos no rectificados, un enlace al formulario de rectificación
    // En el caso de los pedidos rectificados, un enlace para ver el detalle del pedido.


    const tableBody = document.getElementById("table-body");
    // orders
    const getOrders = async () => {
        const response = await fetch("http://localhost:3000/orders");
        return response.json();
    }

    //render elements
    const renderOrders = async () => {

        // orders
        const result = await getOrders();
        tableBody.innerHTML = "";

        const schoolId = sessionStorage.getItem('schoolId');

        result.forEach(item => {
            if (item.id == schoolId) {

                let trElement = document.createElement('tr');
                // create headers
                let dateElement = document.createElement('td');
                let orderM1Element = document.createElement('td');
                let orderM2Element = document.createElement('td');
                let orderM3Element = document.createElement('td');
                let orderM4Element = document.createElement('td');
                let orderM5Element = document.createElement('td');
                let actionElement = document.createElement('td');

                // create button element
                let buttonElement = document.createElement('button');

                // info element
                dateElement.innerText = item.date;
                schoolsElement.innerText = item.nombre;
                orderM1Element.innerText = item.vegetarian;
                orderM2Element.innerText = item.celiac;
                orderM3Element.innerText = item.standard;
                orderM4Element.innerText = item.caloric;
                orderM5Element.innerText = item.ethnic;

                if (item.is_rectified === true) {
                    // button info element
                    buttonElement.classList.add("btn", "btn-success");
                    buttonElement.innerText = 'Ver Detalle';
                    trElement.classList.add('bg-detail')
                } else {
                    // button info element
                    trElement.classList.add('bg-rectificar');
                    if (item.id) {
                        buttonElement.classList.add("btn", "btn-danger");
                        buttonElement.addEventListener('click', function () { getVerify(item.id) });
                        buttonElement.innerText = 'Rectificar';
                    } else {

                        buttonElement.innerText = 'Pendiente';

                        buttonElement.classList.add("btn", "btn-secondary", 'disabled');
                    }

                }
                actionElement.appendChild(buttonElement);

                // tr elements
                trElement.appendChild(dateElement);
                trElement.appendChild(orderM1Element);
                trElement.appendChild(orderM2Element);
                trElement.appendChild(orderM3Element);
                trElement.appendChild(orderM4Element);
                trElement.appendChild(orderM5Element);
                trElement.appendChild(actionElement);
                tableBody.appendChild(trElement);
            }
        });
    }

    // promise all
    (async () => {
        const render = await Promise.all([getOrders(), renderOrders()]);

    })();

    const newOder = async () => {
        window.location.href = `/orders/new`
    };

    const getRectify = async (id) => {
        window.location.href = `/orders/${id}/rectify`
    };

</script>
